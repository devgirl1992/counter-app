{"ast":null,"code":"import _classCallCheck from \"/home/dci/Desktop/counter-app-mosh/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/dci/Desktop/counter-app-mosh/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/dci/Desktop/counter-app-mosh/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/dci/Desktop/counter-app-mosh/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/dci/Desktop/counter-app-mosh/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/dci/Desktop/counter-app-mosh/src/components/counter.jsx\";\nimport React, { Component } from 'react';\n\nvar Counter =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Counter, _Component);\n\n  function Counter() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Counter);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Counter)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      value: _this.props.value,\n      tags: [\"tag1\", \"tag2\", \"tag3\"]\n    };\n\n    _this.handleIncrement = function () {\n      _this.setState({\n        value: _this.state.value + 1\n      });\n\n      console.log('new value is', _this.state.value + 1);\n    };\n\n    _this.handleDecrease = function () {\n      var seccheck = _this.state.value;\n      var check = _this.props.value;\n\n      if (check < 0) {\n        seccheck = \"zero\";\n      } else {\n        seccheck = seccheck - 1;\n      }\n\n      ;\n\n      _this.setState({\n        value: _this.state.value - 1\n      });\n      /* if (check < 0) {\n           this.props.value = 0\n       }*/\n\n\n      console.log('new value is', _this.state.value - 1);\n    };\n\n    return _this;\n  }\n\n  _createClass(Counter, [{\n    key: \"formatValue\",\n    value: function formatValue() {\n      var value = this.state.value;\n      return value > 0 ? value : \"zero\";\n    }\n  }, {\n    key: \"getBadgeClass\",\n    value: function getBadgeClass() {\n      var classes = \"badge m-2 badge-\";\n      classes += this.state.value > 0 ? \"primary\" : \"warning\";\n      return classes;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log('props', this.props);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: this.getBadgeClass(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, this.formatValue()), React.createElement(\"button\", {\n        onClick: this.handleIncrement,\n        className: \"btn btn-secondary btn-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Increment\"), React.createElement(\"button\", {\n        onClick: this.handleDecrease,\n        className: \"btn btn-secondary btn-sm m-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Decrease\"), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, this.state.tags.map(function (tag) {\n        return React.createElement(\"li\", {\n          key: tag,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, tag);\n      })));\n    }\n  }]);\n\n  return Counter;\n}(Component);\n\nexport default Counter;","map":{"version":3,"sources":["/home/dci/Desktop/counter-app-mosh/src/components/counter.jsx"],"names":["React","Component","Counter","state","value","props","tags","handleIncrement","setState","console","log","handleDecrease","seccheck","check","classes","getBadgeClass","formatValue","map","tag"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;IAEMC,O;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,KAAK,EAAE,MAAKC,KAAL,CAAWD,KADd;AAEJE,MAAAA,IAAI,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB;AAFF,K;;UAkBRC,e,GAAkB,YAAM;AACpB,YAAKC,QAAL,CAAc;AAACJ,QAAAA,KAAK,EAAE,MAAKD,KAAL,CAAWC,KAAX,GAAmB;AAA3B,OAAd;;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA2B,MAAKP,KAAL,CAAWC,KAAX,GAAmB,CAA9C;AACH,K;;UAEDO,c,GAAiB,YAAM;AACnB,UAAIC,QAAQ,GAAG,MAAKT,KAAL,CAAWC,KAA1B;AACA,UAAIS,KAAK,GAAG,MAAKR,KAAL,CAAWD,KAAvB;;AACA,UAAIS,KAAK,GAAG,CAAZ,EAAe;AACZD,QAAAA,QAAQ,GAAG,MAAX;AACF,OAFD,MAEK;AACDA,QAAAA,QAAQ,GAAGA,QAAQ,GAAG,CAAtB;AACH;;AAAA;;AAKD,YAAKJ,QAAL,CAAc;AAACJ,QAAAA,KAAK,EAAE,MAAKD,KAAL,CAAWC,KAAX,GAAkB;AAA1B,OAAd;AAEF;;;;;AAIEK,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA2B,MAAKP,KAAL,CAAWC,KAAX,GAAkB,CAA7C;AACH,K;;;;;;;kCAnCa;AAAA,UACHA,KADG,GACM,KAAKD,KADX,CACHC,KADG;AAEV,aAAOA,KAAK,GAAG,CAAR,GAAYA,KAAZ,GAAoB,MAA3B;AACH;;;oCAEe;AACZ,UAAIU,OAAO,GAAG,kBAAd;AACAA,MAAAA,OAAO,IAAI,KAAKX,KAAL,CAAWC,KAAX,GAAmB,CAAnB,GAAuB,SAAvB,GAAmC,SAA9C;AACA,aAAOU,OAAP;AACH;;;6BA6BQ;AAELL,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqB,KAAKL,KAA1B;AAEA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,SAAS,EAAE,KAAKU,aAAL,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAwC,KAAKC,WAAL,EAAxC,CADJ,EAGI;AACI,QAAA,OAAO,EAAG,KAAKT,eADnB;AAEI,QAAA,SAAS,EAAC,0BAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHJ,EAQI;AACI,QAAA,OAAO,EAAG,KAAKI,cADnB;AAEI,QAAA,SAAS,EAAC,8BAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBARJ,EAYI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKR,KAAL,CAAWG,IAAX,CAAgBW,GAAhB,CAAoB,UAAAC,GAAG;AAAA,eAAI;AAAI,UAAA,GAAG,EAAEA,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAeA,GAAf,CAAJ;AAAA,OAAvB,CAAL,CAZJ,CADJ;AAiBH;;;;EAnEiBjB,S;;AAwEtB,eAAeC,OAAf","sourcesContent":["import React, {Component} from 'react';\n\nclass Counter extends Component {\n    state = {\n        value: this.props.value,\n        tags: [\"tag1\", \"tag2\", \"tag3\"]\n\n    };\n\n\n    formatValue() {\n        const {value} = this.state;\n        return value > 0 ? value : \"zero\"\n    }\n\n    getBadgeClass() {\n        let classes = \"badge m-2 badge-\";\n        classes += this.state.value > 0 ? \"primary\" : \"warning\";\n        return classes;\n    }\n\n    handleIncrement = () => {\n        this.setState({value: this.state.value + 1});\n        console.log('new value is',this.state.value + 1)\n    };\n\n    handleDecrease = () => {\n        let seccheck = this.state.value;\n        let check = this.props.value;\n        if (check < 0 ){\n           seccheck = \"zero\"\n        }else{\n            seccheck = seccheck - 1\n        };\n\n\n\n\n        this.setState({value: this.state.value -1});\n\n      /* if (check < 0) {\n           this.props.value = 0\n       }*/\n\n        console.log('new value is',this.state.value -1 )\n    };\n\n\n    render() {\n\n        console.log('props', this.props);\n\n        return (\n            <div>\n                <span className={this.getBadgeClass()}>{this.formatValue()}</span>\n\n                <button\n                    onClick={ this.handleIncrement }\n                    className=\"btn btn-secondary btn-sm\">Increment\n                </button>\n\n                <button\n                    onClick={ this.handleDecrease }\n                    className=\"btn btn-secondary btn-sm m-2\">Decrease</button>\n\n                <ul>{this.state.tags.map(tag => <li key={tag}>{tag}</li>)}</ul>\n\n            </div>\n        );\n    }\n\n\n}\n\nexport default Counter;\n"]},"metadata":{},"sourceType":"module"}